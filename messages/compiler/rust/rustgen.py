# Concord
#
# Copyright (c) 2022 VMware, Inc. All Rights Reserved.
#
# This product is licensed to you under the Apache 2.0 license (the "License").
# You may not use this product except in compliance with the Apache 2.0 License.
#
# This product may include a number of subcomponents with separate copyright
# notices and license terms. Your use of these subcomponents is subject to the
# terms and conditions of the subcomponent's license, as noted in the LICENSE
# file.

import os
from rust.rust_visitor import RustVisitor
from walker import Walker

header = """/***************************************
 Autogenerated by cmfc. Do not modify.
***************************************/

"""

# TODO: Code to be included in all .rs files compiled from .cmf files could either be given here as a string and
#       concatenated into the code returned by translate or it could be included in serialize.rs.

def translate(ast, namespace=None):
    """
    Walk Concord Message Format(CMF) AST and generate Rust code.

    Return Rust code as a string.
    """
    with open(os.path.join(os.path.dirname(__file__), "serialize.rs")) as f:
        base_serializers = f.read() + "\n"
    visitor = RustVisitor()
    walker = Walker(ast, visitor)
    walker.walk()
    return header + base_serializers + visitor.oneof_enum_definitions + visitor.output
