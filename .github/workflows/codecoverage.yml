name: Code Coverage (Apollo tests)
on:
  schedule:
    - cron: "0 3 * * 0" # Every Sunday at 3AM UTC

jobs:
  build:
    name: Code coverage for Apollo Tests
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
    steps:
      - name: Cleanup pre-installed tools
        run: |
          # This is a fix for https://github.com/actions/virtual-environments/issues/1918
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - name: Checkout repository code
        uses: actions/checkout@v2
      - name: Create artifact directory
        run: mkdir -p ${{ github.workspace }}/artifact

      - name: Build and test
        id: build_test
        run: |
          script -q -e -c "make pull"
          sudo df -h
          script -q -e -c "CONCORD_BFT_CONTAINER_CC=clang CONCORD_BFT_CONTAINER_CXX=clang++ \
          CONCORD_BFT_CMAKE_CODECOVERAGE=TRUE CONCORD_BFT_CMAKE_TRANSPORT=UDP make build" && script -q -e -c "make test"

      - name: Generate code coverage report for apollo tests
        id: gccreport
        if: always()
        run: |
          script -q -e -c "make codecoverage"

      - name: Check to see if the code coverage report directory exists
        id: dccreport
        if: steps.gccreport.outcome == 'success'
        run: |
          chmod +x "./.github/success_action_if_codecoverage_reports_exist.sh"
          ./.github/success_action_if_codecoverage_reports_exist.sh ./build/tests/apollo/coveragereport
      - name: Prepare artifacts
        id: partifacts
        if: steps.gccreport.outcome == 'success' && steps.dccreport.outcome == 'success'
        run: |
          sudo chown -R ${USER}:${GROUP} ${PWD}/build
          tar -czvf ${{ github.workspace }}/artifact/apollo-tests-codecoverage.tar.gz ./build/tests/apollo/coveragereport
          du -h ${{ github.workspace }}/artifact
          sudo df -h
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: steps.partifacts.outcome == 'success'
        with:
          name: artifacts-${{ github.sha }}
          path: ${{ github.workspace }}/artifact/
