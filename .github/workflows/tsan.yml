name: tsan
on:
  schedule:
    - cron: '0 0 * * 6'

jobs:
  build:
    name: tsan
    runs-on: ubuntu-18.04
    strategy:
        fail-fast: false
    steps:
        - name: Cleanup pre-installed tools
          run: |
            # This is a fix for https://github.com/actions/virtual-environments/issues/1918
            sudo rm -rf /usr/share/dotnet
            sudo rm -rf /opt/ghc
            sudo rm -rf "/usr/local/share/boost"
            sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        - name: Checkout
          uses: actions/checkout@v2
        - name: Create artifact directory
          run: mkdir -p ${{ github.workspace }}/artifact
        # Uncomment the step below to enable core dump collection
        #- name: Configure core dump location
        #  run: |
            # echo "/concord-bft/build/cores/core.%e.%p" | sudo tee /proc/sys/kernel/core_pattern
        # Uncomment the step below if you want to log into the running session.
        # Please note that the build will block on this step.
        # Refer to https://github.com/marketplace/actions/debugging-with-tmate
        #- name: Setup tmate session
        #  uses: mxschmitt/action-tmate@v2
        - name: Build and test
          run: |
              script -q -e -c "make pull"
              sudo df -h
              script -q -e -c "CONCORD_BFT_CMAKE_OMIT_TEST_OUTPUT=TRUE CONCORD_BFT_CMAKE_KEEP_APOLLO_LOGS=FALSE CONCORD_BFT_CMAKE_TSAN=TRUE CONCORD_BFT_CMAKE_USE_FAKE_CLOCK_IN_TIME_SERVICE=TRUE make build" \
              && script -q -e -c "make test"
        - name: Check if TSAN passed
          if: always()
          run: |
              chmod +x "./.github/fail_action_if_sanitizer_reports_exist.sh"
              ./.github/fail_action_if_sanitizer_reports_exist.sh ./build/tsan_logs
        - name: Prepare artifacts
          if: always()
          run: |
            sudo chown -R ${USER}:${GROUP} ${PWD}/build
            #tar -czvf ${{ github.workspace }}/artifact/logs.tar.gz ./build/tests/apollo/logs # Do not attempt to archive because CONCORD_BFT_CMAKE_KEEP_APOLLO_LOGS=FALSE
            tar -czvf ${{ github.workspace }}/artifact/tsan.logs.tar.gz ./build/tsan_logs
            du -h ${{ github.workspace }}/artifact
            sudo df -h
        - name: Upload artifacts
          uses: actions/upload-artifact@v2
          if: always()
          with:
            name: artifacts-${{ github.sha }}
            path: ${{ github.workspace }}/artifact/


